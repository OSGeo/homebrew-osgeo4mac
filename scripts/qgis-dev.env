#!/bin/bash
###########################################################################
# Environment for QGIS when built off Homebrew dependencies
#                              -------------------
#        begin    : November 2016
#        copyright: (C) 2016 Larry Shaffer
#        email    : larrys at dakotacarto dot com
###########################################################################
#                                                                         #
#   This program is free software; you can redistribute it and/or modify  #
#   it under the terms of the GNU General Public License as published by  #
#   the Free Software Foundation; either version 2 of the License, or     #
#   (at your option) any later version.                                   #
#                                                                         #
###########################################################################

checkcmake(){
  CMAKE=$(which cmake)
  if [ -z $CMAKE ]; then
    echo "CMake executable 'cmake' not found"
    return 1
  fi
  export CMAKE
}

checkctest(){
  CTEST=$(which ctest)
  if [ -z $CTEST ]; then
    echo "CMake executable 'ctest' not found"
    return 1
  fi
  export CTEST
}

checkqt4(){
  if [ -d ${HOMEBREW_PREFIX}/Frameworks/QtCore.framework/Versions/4 ]; then
    echo 'Unlink Qt4 Homebrew formula, e.g. `brew unlink qt`'
    return 1
  fi
}

checkpyqt4(){
  if [ -d ${HOMEBREW_PREFIX}/var/homebrew/linked/pyqt/lib/python2.7/site-packages/PyQt4 ]; then
    echo 'Unlink PyQt4 Homebrew formula: `brew unlink pyqt`'
    return 1
  fi
}

checktxt2tags(){
  if [ -d ${HOMEBREW_PREFIX}/var/homebrew/linked/txt2tags/bin ]; then
    echo 'Unlink txt2tags Homebrew formula: `brew unlink txt2tags`'
    return 1
  fi
}

BUILD_DIR="$1"

if ! [[ "${BUILD_DIR}" = /* ]] || ! [ -d "${BUILD_DIR}" ]; then
  echo "usage: . <script> 'absolute path to build directory'"
  return 1
fi

# if HOMEBREW_PREFIX undefined in env, then set to standard prefix
if [ -z "${HOMEBREW_PREFIX}" ]; then
  HB=$(brew --prefix)
  export HOMEBREW_PREFIX=${HB}
else
  HB=$HOMEBREW_PREFIX
fi

# use maximum number of available cores
export CPUCORES=$(/usr/sbin/sysctl -n hw.ncpu)

# get python3 short version (major.minor)
PY_VER=$(python3 -c "import sys;print('{0}.{1}'.format(sys.version_info[0],sys.version_info[1]).strip())")

# set up environment
export PATH=${HB}/opt/gdal2/bin:${HB}/opt/gdal2-python/bin:${HB}/opt/gdal2-python/libexec/bin:${HB}/opt/qt5/bin:${HB}/opt/qt5-webkit/bin:${HB}/bin:${HB}/sbin:${PATH}
export PYTHONPATH=${HB}/opt/gdal2-python/lib/python${PY_VER}/site-packages:${HB}/lib/python${PY_VER}/site-packages:${PYTHONPATH}
export GDAL_DRIVER_PATH=${HB}/lib/gdalplugins
export GDAL_DATA=${HB}/opt/gdal2/share/gdal
export GRASS_PREFIX=${HB}/opt/grass7/grass-base

echo "CPU cores: ${CPUCORES}"
echo "PATH set to: ${PATH}"
echo "PYTHONPATH set to: ${PYTHONPATH}"
echo "BUILD_DIR set to: ${BUILD_DIR}"
echo "GDAL_DRIVER_PATH set to: ${GDAL_DRIVER_PATH}"
echo "GDAL_DATA set to: ${GDAL_DATA}"
echo "GRASS_PREFIX set to: ${GRASS_PREFIX}"

return 0
